/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/footer/script1.js":
/*!*******************************!*\
  !*** ./src/footer/script1.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nlet us_cart_items_gids = [];\nlet us_in_progress = false;\ncheckCart();\ngetResults();\nsetInterval(getResults, 2000);\nasync function getRecommnededProductsFromServer(us_cart_items) {\n  if (shouldCallServer(us_cart_items) === false) {\n    return null;\n  }\n  const us_project_id = getShoptetDataLayer('projectId');\n  const us_project_id_modulo = us_project_id % 11;\n  try {\n    const response = await fetch('https://slabihoud.cz/products/' + us_project_id + '/' + us_project_id_modulo + '/' + us_cart_items.toString());\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\nfunction shouldCallServer(us_cart_items) {\n  if (us_cart_items.length == 0) {\n    return false;\n  }\n  if (sessionStorage.getItem('us_request_' + us_cart_items.toString()) != null) {\n    return false;\n  }\n  return true;\n}\nfunction getCartItemsGUIDS() {\n  let us_result_items = [];\n  const us_cart_items = getCartItems();\n  us_cart_items.forEach(function (el) {\n    us_result_items.push(el.getAttribute('data-micro-identifier'));\n  });\n  us_result_items.sort();\n  return us_result_items;\n}\nfunction getCartItems() {\n  return document.querySelectorAll('[data-micro-identifier]:not([data-source=\"easy-upsell\"])');\n}\nfunction getImageCdn() {\n  const us_cart_items = document.querySelectorAll('td.cart-p-image a img');\n  if (us_cart_items.length > 0) {\n    let us_image_src = us_cart_items[0].getAttribute('data-src') || us_cart_items[0].getAttribute('src');\n    if (!us_image_src) return null;\n    const us_image_parts = us_image_src.split('/');\n    us_image_parts.pop();\n    const us_image_cdn = us_image_parts.join('/');\n    return us_image_cdn + '/';\n  }\n}\nfunction isCart() {\n  if (getShoptetDataLayer('pageType') == 'cart') {\n    return true;\n  }\n  if (document.querySelector('[data-testid=\"tableCart\"]')) {\n    return true;\n  }\n  return false;\n}\nfunction checkCart() {\n  if (isCart()) {\n    return;\n  }\n  setTimeout(checkCart, 5000);\n}\nasync function getResults() {\n  setMainDiv();\n  const us_cart_items = getCartItemsGUIDS();\n  if (arraysAreEqual(us_cart_items, us_cart_items_gids)) {\n    return;\n  }\n  if (us_in_progress) {\n    return;\n  }\n  us_in_progress = true;\n  const result = await getRecommnededProductsFromServer(us_cart_items);\n  if (result != null) {\n    await cacheResults(result);\n    await cacheRequest(us_cart_items, result);\n  }\n  us_cart_items_gids = us_cart_items;\n  printResults();\n  us_in_progress = false;\n}\nfunction setMainDiv() {\n  const us_main_div = document.querySelectorAll('#upsell-container');\n  if (us_main_div.length == 0) {\n    const us_cart = document.querySelectorAll('.cart-table');\n    if (us_cart.length > 0) {\n      us_cart.forEach(function (el) {\n        el.insertAdjacentHTML('afterend', '<hr><div id=\"upsell-container\"></div>');\n      });\n    }\n  }\n}\nasync function cacheResults(result) {\n  result.recommendations.forEach(async function (recommendation) {\n    recommendation = await getVariantDetailFromEshop(recommendation);\n    let recommendationJson = JSON.stringify(recommendation);\n    if (recommendationJson != null) {\n      sessionStorage.setItem('us_' + recommendation.id, recommendationJson.toString());\n    }\n  });\n  return true;\n}\nasync function getVariantDetailFromEshop(recommendation) {\n  const us_link_response = await fetchURL(insertCacheInUrl(recommendation.url));\n  const response = await us_link_response.text();\n  const tempContainer = document.createElement('div');\n  tempContainer.innerHTML = response;\n  const availability = tempContainer.querySelector('span.availability-label');\n  recommendation.availability = '';\n  if (availability) {\n    recommendation.availability = availability.textContent.trim();\n  }\n  const product_id = tempContainer.querySelector('input[name=\"productId\"]');\n  if (product_id) {\n    recommendation.id = product_id.getAttribute('value');\n  } else {\n    return null;\n  }\n  const price_id = tempContainer.querySelector('input[name=\"priceId\"]');\n  if (price_id) {\n    recommendation.priceId = price_id.getAttribute('value');\n  } else {\n    return null;\n  }\n  const price = tempContainer.querySelector('span.price-final-holder');\n  if (price) {\n    recommendation.price = price.textContent.trim();\n  } else {\n    return null;\n  }\n  return recommendation;\n}\nasync function fetchURL(url) {\n  try {\n    const response = await fetch(url);\n    return response;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\nasync function cacheRequest(us_cart_items, result) {\n  let us_recommendation_ids = [];\n  result.recommendations.forEach(element => {\n    us_recommendation_ids.push(element.id);\n  });\n  sessionStorage.setItem('us_request_' + us_cart_items.toString(), us_recommendation_ids.toString());\n  sessionStorage.setItem('us_header', result.header);\n  return true;\n}\nfunction checkCachedData(us_product_ids) {\n  let us_result = true;\n  us_product_ids.forEach(function (product_id) {\n    if (sessionStorage.getItem('us_' + product_id) == null) {\n      us_result = false;\n    }\n  });\n  return us_result;\n}\nfunction printResults() {\n  const upsell_container = document.querySelectorAll('#upsell-container');\n  if (upsell_container.length > 0) {\n    const us_image_cdn = getImageCdn();\n    let us_language = getShoptetDataLayer('language');\n    let us_call_to_action = shoptet.messages['toCart'];\n    upsell_container.forEach(function (el) {\n      let us_request = sessionStorage.getItem('us_request_' + getCartItemsGUIDS().toString());\n      let us_product_ids = us_request ? us_request.split(',') : [];\n      if (us_product_ids.length > 0 && checkCachedData(us_product_ids)) {\n        let us_header = sessionStorage.getItem('us_header');\n        let us_result = '<h4>' + us_header + '</h4><table class=\"cart-table upsell\"><tbody id=\"upsell-recommendations\">';\n        us_product_ids.forEach(function (product_id) {\n          let recommendation = sessionStorage.getItem('us_' + product_id);\n          if (recommendation != null) {\n            recommendation = JSON.parse(recommendation);\n            let us_result_item = `\n                                <tr class=\"removeable\" data-micro=\"cartItem\" data-source=\"easy-upsell\" data-micro-identifier=\"${recommendation.guid}\" data-micro-sku=\"${recommendation.code}\" data-testid=\"productItem_${recommendation.guid}\">\n                                    <td class=\"cart-p-image\"><a href=\"${recommendation.url}\"><img src=\"${us_image_cdn}${recommendation.image_url}\" data-src=\"${us_image_cdn}${recommendation.image_url}\" alt=\"${recommendation.name}\"></a></td>\n                                    <td class=\"p-name\" data-testid=\"cartProductName\"><a href=\"${recommendation.url}\" class=\"main-link\" data-testid=\"cartWidgetProductName\">${recommendation.name}</a></td>\n                                    <td class=\"p-availability p-cell\"><strong class=\"availability-label\">${recommendation.availability}</strong></td>\n                                    <td class=\"p-quantity p-cell\">\n                                        <form action=\"/action/Cart/addCartItem/\" method=\"post\" class=\"pr-action csrf-enabled\">\n                                            <input type=\"hidden\" name=\"language\" value=\"${us_language}\">\n                                            <input type=\"hidden\" name=\"priceId\" value=\"${recommendation.priceId}\">\n                                            <input type=\"hidden\" name=\"productId\" value=\"${recommendation.id}\">\n                                            <input type=\"hidden\" name=\"amount\" value=\"1\" autocomplete=\"off\">\n                                            <button type=\"submit\" class=\"btn btn-cart add-to-cart-button\" data-testid=\"buttonAddToCart\">\n                                                <span>${us_call_to_action}</span>\n                                            </button>\n                                        </form>\n                                    </td>\n                                    <td class=\"p-total\"><strong class=\"price-final\" data-testid=\"cartItemPrice\">${recommendation.price}</strong><span class=\"unit-value\">/ ${recommendation.unit}</span></td>\n                                </tr>`;\n            us_result += us_result_item;\n          }\n        });\n        us_result += '</tbody></table>';\n        el.insertAdjacentHTML('beforeend', us_result);\n      }\n    });\n  }\n}\nfunction insertCacheInUrl(url) {\n  const urlParts = url.split('/');\n  if (urlParts.length > 2) {\n    urlParts.splice(3, 0, 'cache');\n  }\n  return urlParts.join('/');\n}\nfunction arraysAreEqual(array1, array2) {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n//# sourceURL=webpack://easyupsell/./src/footer/script1.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/footer/script1.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;